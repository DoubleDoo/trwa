import './globals.css'
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import { headers } from 'next/headers'
import { type ReactNode } from 'react'
import { cookieToInitialState } from 'wagmi'

import { getConfig } from '../wagmi'
import { Providers } from './providers'
import {init, miniApp} from "@telegram-apps/sdk";

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Create Wagmi',
  description: 'Generated by create-wagmi',
}

export default function RootLayout(props: { children: ReactNode }) {
  const initialState = cookieToInitialState(
    getConfig(),
    headers().get('cookie'),
  )
  const initializeTelegramSDK = async () => {
    try {
      await init();


      if (miniApp.ready.isAvailable()) {
        await miniApp.ready();
        console.log('Mini App готово');
      }


    } catch (error) {
      console.error('Ошибка инициализации:', error);
    }
  };

  initializeTelegramSDK();

  return (
    <html lang="en">
    <head>
        <script src="https://telegram.org/js/telegram-web-app.js"></script>
    </head>
    <body className={inter.className}>
    <Providers initialState={initialState}>{props.children}</Providers>
      </body>
    </html>
  )
}
